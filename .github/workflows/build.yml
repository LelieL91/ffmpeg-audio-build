name: Build static ffmpeg

on:
  push:
    branches-ignore:
      - main
    tags-ignore:
      - main

jobs:
  package-linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch:
          - x86_64
          - arm64
    env:
      ARCH: ${{ matrix.arch }}
    steps:
      - uses: actions/checkout@v4.2.2
      - name: Install dependencies
        run: |
          sudo apt-get update -y && \
          sudo apt-get install -y yasm
      - name: Install ARM64 compiler
        if: env.ARCH == 'arm64'
        run: |
          sudo apt-get update -y && \
          sudo apt-get install -y gcc-aarch64-linux-gnu
      - name: Build Linux Artifacts
        run: ./build-linux.sh
      - name: Archive Linux Artifacts
        uses: actions/upload-artifact@v4.4.3
        with:
          name: ffmpeg-linux-${{ env.ARCH }}
          path: artifacts/

  package-windows:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch:
          - x86_64
    env:
      ARCH: ${{ matrix.arch }}
    steps:
      - uses: actions/checkout@v4.2.2
      - name: Install dependencies
        run: |
          sudo apt-get update -y && \
          sudo apt-get install -y yasm mingw-w64
      - name: Build Windows Artifact
        run: ./build-windows.sh
      - name: Archive Windows Artifact
        uses: actions/upload-artifact@v4.4.3
        with:
          name: ffmpeg-windows-${{ env.ARCH }}
          path: artifacts/

  package-macos:
    runs-on: macos-latest
    strategy:
      matrix:
        # https://developer.apple.com/documentation/apple-silicon/building-a-universal-macos-binary#Update-the-Architecture-List-of-Custom-Makefiles
        target:
          - x86_64-apple-macos10.9
          - arm64-apple-macos11
    env:
      TARGET: ${{ matrix.target }}
    steps:
      - uses: actions/checkout@v4.2.2
      - name: Install dependencies
        run: brew install yasm
      - name: Build MacOS Artifacts
        run: ./build-macos.sh
      - name: Archive MacOS Artifacts
        uses: actions/upload-artifact@v4.4.3
        with:
          name: ffmpeg-${{ matrix.target }}
          path: artifacts/

  release:
    runs-on: ubuntu-latest
    needs:
      - package-linux
      - package-windows
      - package-macos
    steps:
      - name: Download Builds Artifacts
        uses: actions/download-artifact@v4.1.8
        with:
          path: artifacts/
      - name: Make tarballs
        run: |
          mkdir artifacts/release/
          cd artifacts/
          for dir in ffmpeg-*/ffmpeg-*
          do
            name=$(basename $dir)
            tar czf release/$name.tar.gz -C $(dirname $dir) $name
          done
          ls -l release/
      - name: Release
        uses: softprops/action-gh-release@v2.1.0
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          files: artifacts/release/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
